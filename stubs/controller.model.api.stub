<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use {{ rootNamespace }}Http\Controllers\Controller;
use Illuminate\Http\Request;
use {{ rootNamespace }}{{ customNamespaceStoreRequest }};
use {{ rootNamespace }}{{ customNamespaceUpdateRequest }};


class {{ class }} extends Controller
{
    protected $is_public = false;
    protected $need_permission = true;


    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index(Request $request)
    {
        $model = {{ model }}::query();
        $data = $this->search($model, $request);
        return $this->success($data);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \{{ customNamespaceStoreRequest }}  $request
     * @return \Illuminate\Http\Response
     */
    public function store({{ customStoreRequest }} $request)
    {
        $created = {{ model }}::create($request->validated());
        return $this->success($created);
    }

    /**
     * Display the specified resource.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\Response
     */
    public function show({{ model }} ${{ modelVariable }})
    {
        //${{ modelVariable }}->load();
        return $this->success(${{ modelVariable }});
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \{{ customNamespaceUpdateRequest }}  $request
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\Response
     */
    public function update({{ customUpdateRequest }} $request, {{ model }} ${{ modelVariable }})
    {
        ${{ modelVariable }}->update($request->validated());
        return $this->success(${{ modelVariable }});
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\Response
     */
    public function destroy({{ model }} ${{ modelVariable }})
    {
        ${{ modelVariable }}->delete();
        return $this->success(${{ modelVariable }});
    }
}
